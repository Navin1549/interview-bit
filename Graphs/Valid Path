string Solution::solve(int m, int n, int k, int r, vector<int> &X, vector<int> &Y) {
    vector<int> ans(n+1,0);
    vector<vector<int> > rect(m+1,ans);
  
  for (int i = 0; i <=m; i++) {
    for (int j = 0; j <= n; j++) {
      for (int p = 0; p < k; p++) {
        if (sqrt((pow((X[p] -i), 2) + 
            pow((Y[p] - j), 2))) <= r) 
        {
          rect[i][j] = -1;
        }
      }
    }
  }
   
  string str;
  if (rect[0][0] == -1){
    str="NO";
    return str;
  }
  
  vector<vector<int>> qu;
 
  rect[0][0] = 1;
  qu.push_back({0, 0});
   
 
  while (!qu.empty()) {
    vector<int> arr = qu.front();
    qu.erase(qu.begin());
    int elex = arr[0];
    int eley = arr[1];
 
   
    if ((elex > 0) && (eley > 0) && (rect[elex - 1][eley - 1] == 0)) 
    {
      rect[elex - 1][eley - 1] = 1;
      vector<int> v = {elex - 1, eley - 1};
      qu.push_back(v);
    }
     
    
    if ((elex > 0) && (rect[elex - 1][eley] == 0))
    {
      rect[elex - 1][eley] = 1;
      vector<int> v = {elex - 1, eley};
      qu.push_back(v);
    }
     
   
    if ((elex > 0) && (eley <= n - 1) && (rect[elex - 1][eley + 1] == 0)) 
    {
      rect[elex - 1][eley + 1] = 1;
      vector<int> v = {elex - 1, eley + 1};
      qu.push_back(v);
    }
     
    
    if ((eley > 0) && (rect[elex][eley - 1] == 0)) 
    {
      rect[elex][eley - 1] = 1;
      vector<int> v = {elex, eley - 1};
      qu.push_back(v);
    }
    
    if ((eley <= n - 1) &&  (rect[elex][eley + 1] == 0))
    {
      rect[elex][eley + 1] = 1;
      vector<int> v = {elex, eley + 1};
      qu.push_back(v);
    }
     
    if ((elex <= m - 1) && (eley > 0) & (rect[elex + 1][eley - 1] == 0))
    {
      rect[elex + 1][eley - 1] = 1;
      vector<int> v = {elex + 1, eley - 1};
      qu.push_back(v);
    }
     
    
    if ((elex <= m - 1) && (rect[elex + 1][eley] == 0))
    {
      rect[elex + 1][eley] = 1;
      vector<int> v = {elex + 1, eley};
      qu.push_back(v);
    }
     
    
    if ((elex <= m - 1) && (eley <= n - 1) && (rect[elex + 1][eley + 1] == 0)) 
    {
      rect[elex + 1][eley + 1] = 1;
      vector<int> v = {elex + 1, eley + 1};
      qu.push_back(v);
    }
  }
 
  
  if (rect[m][n ] == 1){
      str="YES";
    return str;
}
else{
    str="NO";
    return str;
    
}

}
