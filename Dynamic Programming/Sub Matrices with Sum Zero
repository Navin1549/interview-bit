int Solution::solve(vector<vector<int> > &A) {
    int m=A.size();
    if(m==0) return 0;
    int n=A[0].size();
    vector<int> line(n+1,0);
    vector<vector< int > > sum(m+1,line);
    for(int i=0;i<m;++i){
        for(int j=0;j<n;++j){
            sum[i+1][j+1]=A[i][j]+sum[i+1][j]+sum[i][j+1]-sum[i][j];
        }
    }
    unordered_map<int,int> mymap;
    int count=0;
    for(int i1=0;i1<m;++i1){
        for(int i2=i1+1;i2<=m;++i2){
            mymap.clear();
            mymap[0]=1;
            for(int j=1;j<=n;++j){
                int diff=sum[i2][j]-sum[i1][j];
                if(mymap.find(diff)==mymap.end()){
                    mymap[diff]=0;
                }
                else{
                    mymap[diff]++;
                }
                count+=mymap[diff];
            }
        }
    }
        
    return count;
}
