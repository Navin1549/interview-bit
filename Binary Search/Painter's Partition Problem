int getmax(vector<int> C){
    int n=C.size();
    int max=C[0];
    for(int i=1;i<n;++i){
        if(max<C[i])
            max=C[i];
    }
    return max;
}

long long int getsum(vector<int> C){
    int n=C.size();
    long long int sum=0;
    for(int i=0;i<n;++i){
        sum=sum+C[i];
       // sum%=10000003;
    }
    return sum;
}

long long int getnum(vector<int> C,long long int limit){
    int n=C.size();
    long long int sum=0;
    long long int num=1;
    for(int i=0;i<n;++i){
        sum+=C[i];
        if(sum>limit){
            sum=C[i];
            num++;
            num%=10000003;
        }
    }
    return num;
}
int Solution::paint(int A, int B, vector<int> &C) {
    long long int lo=getmax(C);
    long long int hi=getsum(C);
    while(lo<hi){
        long long int mid=(lo+hi)/2;
        long long int x=getnum(C,mid);
        if(x<=A)
            hi=mid;
        else
            lo=mid+1;
    }
    return ((lo%10000003)*(B%10000003))%10000003;
}
