/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
TreeLinkNode* getright(TreeLinkNode *A){
    TreeLinkNode* temp=A->next;
    while(temp!=NULL){
        if(temp->left)
            return temp->left;
        if(temp->right)
            return temp->right;
        temp=temp->next;
    }
    return NULL;
}
 
void Solution::connect(TreeLinkNode* A) {
    if(!A)
     return;
    A->next=NULL;
    while(A){
        TreeLinkNode *B=A;
        
        while(B!=NULL){
            if(B->left){
                if(B->right)
                    B->left->next=B->right;
                else
                    B->left->next=getright(B);
            }
            if(B->right)
                B->right->next=getright(B);
                
            B=B->next;
        }
        if(A->left)
            A=A->left;
        else if(A->right)
            A=A->right;
        else 
            A=getright(A);
    }
}
